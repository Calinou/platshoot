
name: Continuous integration
on: push

env:
  GODOT_VERSION: 3.2.3
  EXPORT_NAME: platshoot

jobs:
  export-windows:
    name: Export (Windows)
    runs-on: ubuntu-20.04
    container:
      image: barichello/godot-ci:3.2.3
    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.4
      - name: Setup
        run: |
          mkdir -p ~/.local/share/godot/templates/
          mv /root/.local/share/godot/templates/$GODOT_VERSION.stable ~/.local/share/godot/templates/$GODOT_VERSION.stable
      - name: Export (Windows)
        run: |
          mkdir -p dist/
          godot -v --export "Windows Desktop" "dist/$EXPORT_NAME.exe"
      - name: Upload Artifact
        uses: actions/upload-artifact@v2.2.1
        with:
          name: ${{ env.EXPORT_NAME }}-windows
          path: dist

  export-macos:
    name: Export (macOS)
    runs-on: ubuntu-20.04
    container:
      image: barichello/godot-ci:3.2.3
    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.4
      - name: Setup
        run: |
          mkdir -p ~/.local/share/godot/templates/
          mv /root/.local/share/godot/templates/$GODOT_VERSION.stable ~/.local/share/godot/templates/$GODOT_VERSION.stable
      - name: Export (macOS)
        run: |
          mkdir -p dist/
          godot -v --export "Mac OSX" "dist/$EXPORT_NAME.zip"
      - name: Upload Artifact
        uses: actions/upload-artifact@v2.2.1
        with:
          name: ${{ env.EXPORT_NAME }}-macos
          path: dist

  export-linux-desktop:
    name: Export (Linux Desktop)
    runs-on: ubuntu-20.04
    container:
      image: barichello/godot-ci:3.2.3
    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.4
      - name: Setup
        run: |
          mkdir -p ~/.local/share/godot/templates/
          mv /root/.local/share/godot/templates/$GODOT_VERSION.stable ~/.local/share/godot/templates/$GODOT_VERSION.stable
      - name: Export (Linux)
        run: |
          mkdir -p dist/
          godot -v --export "Linux/X11" "dist/$EXPORT_NAME.x86_64"
      - name: Upload Artifact
        uses: actions/upload-artifact@v2.2.1
        with:
          name: ${{ env.EXPORT_NAME }}-linux-desktop
          path: dist

  export-linux-server:
    name: Export (Linux Server)
    runs-on: ubuntu-20.04
    container:
      image: barichello/godot-ci:3.2.3
    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.4
      - name: Setup
        run: |
          mkdir -p ~/.local/share/godot/templates/
          mv /root/.local/share/godot/templates/$GODOT_VERSION.stable ~/.local/share/godot/templates/$GODOT_VERSION.stable
      - name: Export (Linux)
        run: |
          mkdir -p dist/
          godot -v --export-pack "Linux/X11" "dist/$EXPORT_NAME-server.pck"
          wget "https://downloads.tuxfamily.org/godotengine/$GODOT_VERSION/Godot_v$GODOT_VERSION-stable_linux_server.64.zip" -O /tmp/godot_server.zip
          unzip /tmp/godot_server.zip
          mv -f Godot_v3.2.3-stable_linux_server.64 "dist/$EXPORT_NAME-server.x86_64"
      - name: Upload Artifact
        uses: actions/upload-artifact@v2.2.1
        with:
          name: ${{ env.EXPORT_NAME }}-linux-server
          path: dist

  export-html5:
    name: Export (HTML5)
    runs-on: ubuntu-20.04
    container:
      image: barichello/godot-ci:3.2.3
    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.4
      - name: Setup
        run: |
          mkdir -p ~/.local/share/godot/templates/
          mv /root/.local/share/godot/templates/$GODOT_VERSION.stable ~/.local/share/godot/templates/$GODOT_VERSION.stable
      - name: Export (HTML5)
        run: |
          mkdir -p dist/
          godot -v --export "HTML5" dist/index.html
      - name: Upload Artifact
        uses: actions/upload-artifact@v2.2.1
        with:
          name: ${{ env.EXPORT_NAME }}-html5
          path: dist

      # Installing rsync is needed in order to deploy to GitHub Pages. Without it, the build will fail.
      - name: Install rsync ðŸ“š
        run: |
          apt-get update && apt-get install -y rsync
      - name: Deploy to GitHub Pages ðŸš€
        uses: JamesIves/github-pages-deploy-action@releases/v3
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          # The branch the action should deploy to.
          BRANCH: gh-pages
          # The folder the action should deploy.
          FOLDER: dist
          # Artifacts are large, don't keep the branch's history
          SINGLE_COMMIT: true
